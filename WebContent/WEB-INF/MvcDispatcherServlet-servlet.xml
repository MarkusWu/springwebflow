<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<!-- Automatically creates beans of Class annotated with @Controller, Component, and so on  -->
	<context:component-scan base-package="wu.maocai.springmvc.controller"/>
	
	<!--  Set up handlers for static content-->
	<mvc:resources location="/resources/" mapping="/resources/**"/>
	
	<!-- Enable annotation driven features. Ex. @RequestMapping -->
	<mvc:annotation-driven/>
	
	<!-- Create a bean of InternalResourceViewResolver to resolve internal views,  -->
<!-- 	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		By default, the InternalResourceView is created, but JstlView is created by adding the following tag
		dispatch the request to the view (jsp). Addtionally, it exposes  the JSTL-specific request attributes 
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean> -->

	<!-- Register Spring’s Tiles- ViewResolver as a bean -->
	<bean class="org.springframework.web.servlet.view.tiles2.TilesViewResolver" />

 	<!-- By itself, Tiles- ViewResolver doesn’t know anything about any Tiles definitions, but instead relies on
a TilesConfigurer to keep track of that information. So I need to add a Tiles-
Configurer bean -->
	<bean class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/**/tiles.xml</value>
			</list>
		</property>
	</bean>

<!--Register multipart resovler  -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:maxUploadSize="500000" />
	
</beans>
