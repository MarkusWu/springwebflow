<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow
        http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
        start-state="welcome">

	<var name="customer" class="com.maocaiwu.springwebflow.pizza.domain.Customer"/>
	
	
	<!--By default, the first state is the start state; 
		you can explicitly identify any state as the starting state by setting the start-state attribute
			in the <flow> element: -->
	<view-state id="welcome">
		<transition on="phoneEntered" to="lookupCustomer"/>
	</view-state>
	
	<action-state id="lookupCustomer">
		<evaluate result="customer" expression="pizzaFlowService.lookupCustomer(requestParameters.phoneNumber)"/>
		<transition to="registrationForm" on-exception="com.maocaiwu.springwebflow.pizza.service.CustomerNotFoundException"/>
		<transition to="customerReady"/>
	</action-state>
	
	<view-state id="registrationForm" model="customer">
		<on-entry>
			<evaluate expression="customer.phone = requestParameters.phone"/>
		</on-entry>
		<transition on="submit" to="checkDeliveryArea"/>
	</view-state>
	
	<decision-state id="checkDeliveryArea">
		<if test="pizzaFlowService.checkDeliveryArea(customer.address.zipCode)"
			then="addCustomer"
			else="deliveryWarning"/>
	</decision-state>
	
	<view-state id="deliveryWarning">
		<transition on="accept" to="addCustomer"/>
	</view-state>
	
	<action-state id="addCustomer">
		<evaluate expression="pizzaFlowService.addCustomer(customer)"/>
		<transition to="customerReady"/>
	</action-state>
	
	<end-state id="cancel"/>
	
	<end-state id="customerReady">
		<output name="customer"/>
	</end-state>
	
	<global-transitions>
		<transition on="cancel" to="cancel"/>
	</global-transitions>
</flow>